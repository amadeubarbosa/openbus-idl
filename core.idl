/**
 * \mainpage Documentação da IDL
 */
#ifndef CORE_IDL
#define CORE_IDL

/**
 * \brief Módulo principal, contendo os tipos básicos utilizados pelos outros
 * módulos.
 */
module openbusidl {

/** \brief Representa um identificador universalmente único. */
typedef string UUID;

/** \brief Representa um identificador único. */
typedef UUID Identifier;

/** \brief Representa uma sequência de bytes. */
typedef sequence<octet> OctetSeq;

/** \brief Representa uma sequência de booleanos. */
typedef sequence<boolean> BooleanSeq;

/** \brief Representa o identificador de uma credencial. */
typedef Identifier CredentialIdentifier;

/** \brief Representa uma sequência de identificadores de credenciais. */
typedef sequence<CredentialIdentifier> CredentialIdentifierList;

/** \brief Representa o identificador de um observador de credencial. */
typedef Identifier CredentialObserverIdentifier;

/** \brief Representa uma sequência de identificadores de observadores de credenciais. */
typedef sequence<CredentialObserverIdentifier> CredentialObserverIdentifierList;

/**
 * \brief Representa a credencial de um membro.
 */
struct Credential {
  CredentialIdentifier identifier; /**< \brief Identificador único. */
  string owner; /**< \brief Nome da entidade dona. */
  string delegate; /**< \brief Nome da entidade delegada (opcional). */
};

/** \brief Representa uma sequência de credenciais. */
typedef sequence<Credential> CredentialSeq;


};

#endif
